{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cv\\\\frontend\\\\src\\\\Components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null); // Store selected file\n  const [message, setMessage] = useState(''); // Store server response message\n  const [filePath, setFilePath] = useState(''); // Store the path of the saved .txt file\n\n  // Function to handle file selection\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // Function to upload the file to the backend\n  const handleFileUpload = async () => {\n    if (!file) {\n      setMessage('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file); // Append the file to form data\n\n    try {\n      // Make a POST request to the backend using fetch\n      const response = await fetch('http://localhost:3000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json(); // Parse JSON response\n      if (response.ok) {\n        setMessage(data.message); // Show success message\n        setFilePath(data.textFilePath); // Set the path to the saved text file\n      } else {\n        setMessage(data.message || 'Error uploading file');\n      }\n    } catch (error) {\n      setMessage('Error uploading file');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-semibold mb-4 text-center\",\n      children: \"Upload Your Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".pdf\",\n      className: \"block w-full p-2 mb-4 border border-gray-300 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      className: \"w-full p-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-center text-gray-700\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), filePath && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-center text-gray-700\",\n      children: [\"File processed successfully.\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `http://localhost:3000/${filePath}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-blue-500\",\n        children: \"Download the extracted text file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"31k76ST0vuOaOiWC/fZqJz2z9pk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","message","setMessage","filePath","setFilePath","handleFileChange","e","target","files","handleFileUpload","formData","FormData","append","response","fetch","method","body","data","json","ok","textFilePath","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","href","rel","_c","$RefreshReg$"],"sources":["C:/Cv/frontend/src/Components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);  // Store selected file\r\n  const [message, setMessage] = useState('');  // Store server response message\r\n  const [filePath, setFilePath] = useState('');  // Store the path of the saved .txt file\r\n\r\n  // Function to handle file selection\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  // Function to upload the file to the backend\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      setMessage('Please select a file first.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);  // Append the file to form data\r\n\r\n    try {\r\n      // Make a POST request to the backend using fetch\r\n      const response = await fetch('http://localhost:3000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();  // Parse JSON response\r\n      if (response.ok) {\r\n        setMessage(data.message);  // Show success message\r\n        setFilePath(data.textFilePath);  // Set the path to the saved text file\r\n      } else {\r\n        setMessage(data.message || 'Error uploading file');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error uploading file');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-md mx-auto bg-white rounded-lg shadow-lg\">\r\n      <h1 className=\"text-xl font-semibold mb-4 text-center\">Upload Your Resume</h1>\r\n\r\n      {/* File input */}\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n        accept=\".pdf\"\r\n        className=\"block w-full p-2 mb-4 border border-gray-300 rounded\"\r\n      />\r\n      \r\n      {/* Upload button */}\r\n      <button\r\n        onClick={handleFileUpload}\r\n        className=\"w-full p-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n      >\r\n        Upload Resume\r\n      </button>\r\n\r\n      {/* Display message */}\r\n      {message && <p className=\"mt-4 text-center text-gray-700\">{message}</p>}\r\n\r\n      {/* If file was processed, show link to the saved .txt file */}\r\n      {filePath && (\r\n        <p className=\"mt-2 text-center text-gray-700\">\r\n          File processed successfully.{' '}\r\n          <a\r\n            href={`http://localhost:3000/${filePath}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-blue-500\"\r\n          >\r\n            Download the extracted text file\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}