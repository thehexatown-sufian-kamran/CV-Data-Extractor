{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cv\\\\frontend\\\\src\\\\Components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState } from 'react';\n\n// const FileUpload = () => {\n//   const [file, setFile] = useState(null); // Store selected file\n//   const [message, setMessage] = useState(''); // Store server response message\n\n//   // Function to handle file selection\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Function to upload the file to the backend\n//   const handleFileUpload = async () => {\n//     if (!file) {\n//       setMessage('Please select a file first.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await fetch('http://localhost:3000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         setMessage('File uploaded successfully!');\n//       } else {\n//         setMessage(data.message || 'Error uploading the file');\n//       }\n//     } catch (error) {\n//       setMessage('Error uploading file');\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen bg-gray-100\">\n//       <div className=\"w-96 p-6 bg-white rounded-lg shadow-lg\">\n//         <h1 className=\"text-xl font-semibold mb-4 text-center\">Upload Your Resume</h1>\n\n//         {/* File input */}\n//         <input\n//           type=\"file\"\n//           onChange={handleFileChange}\n//           accept=\".pdf\"\n//           className=\"block w-full p-2 mb-4 border border-gray-300 rounded text-sm\"\n//         />\n\n//         <button\n//           onClick={handleFileUpload}\n//           className=\"w-full p-2 bg-blue-500 text-white rounded font-semibold hover:bg-blue-600 transition\"\n//         >\n//           Upload Resume\n//         </button>\n\n//         {message && <p className=\"mt-4 text-center text-gray-700\">{message}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FileUpload;\n\n// import React, { useState } from 'react';\n\n// const FileUpload = () => {\n//   const [file, setFile] = useState(null); \n//   const [message, setMessage] = useState(''); \n//   const [parsedData, setParsedData] = useState(null); \n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const handleFileUpload = async () => {\n//     if (!file) {\n//       setMessage('Please select a file first.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n//       // Log formData to check if file is being appended\n//   console.log(...formData); // This will log the FormData contents\n\n//     try {\n//       const response = await fetch('http://localhost:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         setMessage('File uploaded and processed successfully!');\n//         setParsedData(data); \n//       } else {\n//         setMessage(data.message || 'Error uploading the file');\n//       }\n//     } catch (error) {\n//       setMessage('Error uploading file');\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex justify-center items-center h-screen bg-gray-100\">\n//       <div className=\"w-96 p-6 bg-white rounded-lg shadow-lg\">\n//         <h1 className=\"text-xl font-semibold mb-4 text-center\">Upload Your Resume</h1>\n\n//         <input\n//           type=\"file\"\n//           onChange={handleFileChange}\n//           accept=\".pdf,.docx,.jpg,.png\"\n//           className=\"block w-full p-2 mb-4 border border-gray-300 rounded text-sm\"\n//         />\n\n//         <button\n//           onClick={handleFileUpload}\n//           className=\"w-full p-2 bg-blue-500 text-white rounded font-semibold hover:bg-blue-600 transition\"\n//         >\n//           Upload Resume\n//         </button>\n\n//         {message && <p className=\"mt-4 text-center text-gray-700\">{message}</p>}\n\n//         {/* Display parsed data */}\n//         {parsedData?.extractedText && (\n//   <div className=\"mt-4\">\n//     <h2 className=\"text-lg font-semibold\">Extracted Text</h2>\n//     <h1 className=\"text-sm\">{parsedData.extractedText}</h1>\n//   </div>\n// )}\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default FileUpload;\n\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [extractedData, setExtractedData] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (!file) {\n      setMessage('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('File uploaded and processed successfully!');\n        setExtractedData(data);\n      } else {\n        setMessage(data.message || 'Error uploading the file');\n      }\n    } catch (error) {\n      setMessage('Error uploading file');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-96 p-6 bg-white rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold mb-4 text-center\",\n        children: \"Upload Your Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \".pdf\",\n        className: \"block w-full p-2 mb-4 border border-gray-300 rounded text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        className: \"w-full p-2 bg-blue-500 text-white rounded font-semibold hover:bg-blue-600 transition\",\n        children: \"Upload Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-center text-gray-700\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), extractedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: \"Extracted Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 16\n          }, this), \" \", extractedData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 16\n          }, this), \" \", extractedData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"YUZsCVODC8q/H7BrFFilVHStxJs=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["FileUpload","_s","file","setFile","useState","message","setMessage","extractedData","setExtractedData","handleFileChange","e","target","files","handleFileUpload","formData","FormData","append","response","fetch","method","body","data","json","ok","error","console","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","name","email","_c","$RefreshReg$"],"sources":["C:/Cv/frontend/src/Components/FileUpload.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const FileUpload = () => {\r\n//   const [file, setFile] = useState(null); // Store selected file\r\n//   const [message, setMessage] = useState(''); // Store server response message\r\n\r\n//   // Function to handle file selection\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   // Function to upload the file to the backend\r\n//   const handleFileUpload = async () => {\r\n//     if (!file) {\r\n//       setMessage('Please select a file first.');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('file', file);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:3000/upload', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         setMessage('File uploaded successfully!');\r\n//       } else {\r\n//         setMessage(data.message || 'Error uploading the file');\r\n//       }\r\n//     } catch (error) {\r\n//       setMessage('Error uploading file');\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex justify-center items-center h-screen bg-gray-100\">\r\n//       <div className=\"w-96 p-6 bg-white rounded-lg shadow-lg\">\r\n//         <h1 className=\"text-xl font-semibold mb-4 text-center\">Upload Your Resume</h1>\r\n\r\n//         {/* File input */}\r\n//         <input\r\n//           type=\"file\"\r\n//           onChange={handleFileChange}\r\n//           accept=\".pdf\"\r\n//           className=\"block w-full p-2 mb-4 border border-gray-300 rounded text-sm\"\r\n//         />\r\n\r\n//         <button\r\n//           onClick={handleFileUpload}\r\n//           className=\"w-full p-2 bg-blue-500 text-white rounded font-semibold hover:bg-blue-600 transition\"\r\n//         >\r\n//           Upload Resume\r\n//         </button>\r\n\r\n//         {message && <p className=\"mt-4 text-center text-gray-700\">{message}</p>}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FileUpload;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const FileUpload = () => {\r\n//   const [file, setFile] = useState(null); \r\n//   const [message, setMessage] = useState(''); \r\n//   const [parsedData, setParsedData] = useState(null); \r\n\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleFileUpload = async () => {\r\n//     if (!file) {\r\n//       setMessage('Please select a file first.');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('file', file);\r\n//       // Log formData to check if file is being appended\r\n//   console.log(...formData); // This will log the FormData contents\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/upload', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         setMessage('File uploaded and processed successfully!');\r\n//         setParsedData(data); \r\n//       } else {\r\n//         setMessage(data.message || 'Error uploading the file');\r\n//       }\r\n//     } catch (error) {\r\n//       setMessage('Error uploading file');\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex justify-center items-center h-screen bg-gray-100\">\r\n//       <div className=\"w-96 p-6 bg-white rounded-lg shadow-lg\">\r\n//         <h1 className=\"text-xl font-semibold mb-4 text-center\">Upload Your Resume</h1>\r\n\r\n//         <input\r\n//           type=\"file\"\r\n//           onChange={handleFileChange}\r\n//           accept=\".pdf,.docx,.jpg,.png\"\r\n//           className=\"block w-full p-2 mb-4 border border-gray-300 rounded text-sm\"\r\n//         />\r\n\r\n//         <button\r\n//           onClick={handleFileUpload}\r\n//           className=\"w-full p-2 bg-blue-500 text-white rounded font-semibold hover:bg-blue-600 transition\"\r\n//         >\r\n//           Upload Resume\r\n//         </button>\r\n\r\n//         {message && <p className=\"mt-4 text-center text-gray-700\">{message}</p>}\r\n\r\n//         {/* Display parsed data */}\r\n//         {parsedData?.extractedText && (\r\n//   <div className=\"mt-4\">\r\n//     <h2 className=\"text-lg font-semibold\">Extracted Text</h2>\r\n//     <h1 className=\"text-sm\">{parsedData.extractedText}</h1>\r\n//   </div>\r\n// )}\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FileUpload;\r\n\r\n\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [extractedData, setExtractedData] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      setMessage('Please select a file first.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage('File uploaded and processed successfully!');\r\n        setExtractedData(data);\r\n      } else {\r\n        setMessage(data.message || 'Error uploading the file');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error uploading file');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen bg-gray-100\">\r\n      <div className=\"w-96 p-6 bg-white rounded-lg shadow-lg\">\r\n        <h1 className=\"text-xl font-semibold mb-4 text-center\">Upload Your Resume</h1>\r\n\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          accept=\".pdf\"\r\n          className=\"block w-full p-2 mb-4 border border-gray-300 rounded text-sm\"\r\n        />\r\n\r\n        <button\r\n          onClick={handleFileUpload}\r\n          className=\"w-full p-2 bg-blue-500 text-white rounded font-semibold hover:bg-blue-600 transition\"\r\n        >\r\n          Upload Resume\r\n        </button>\r\n\r\n        {message && <p className=\"mt-4 text-center text-gray-700\">{message}</p>}\r\n\r\n        {extractedData && (\r\n          <div className=\"mt-4\">\r\n            <h2 className=\"text-lg font-semibold\">Extracted Data</h2>\r\n            <p><strong>Name:</strong> {extractedData.name}</p>\r\n            <p><strong>Email:</strong> {extractedData.email}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}